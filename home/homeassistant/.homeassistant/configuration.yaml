homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 55.6059
  longitude: 13.0007
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 12
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Stockholm

  customize:
    switch.larm_motion_foscam_black:
      friendly_name: "Toggle bedrom motion sensor"

# Enables the frontend
frontend:

http:
  # Uncomment this to add a password (recommended!)
  api_password: hasspassGislaved
  # Uncomment this if you are using SSL or running in Docker etc
  # base_url: example.duckdns.org:8123

# Checks for available updates
updater:

# Discover some devices automatically
#discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time.
history:

# View all events in a logbook
logbook:

# Track the sun
sun:

# Weather Prediction
sensor:
  platform: yr

# Text to speech
tts:
  platform: google

media_player:
  - platform: cast
    host: 192.168.9.203
    name: chromecasttv

device_tracker:
  - platform: ping
    hosts:
      ola_galaxy_s6: 192.168.9.218

binary_sensor:
  - platform: template
    sensors:
      cam_foscam_black_motion_sensor:
        value_template: "{{ states.input_boolean.cam_foscam_black_motion.state == 'on' }}"
        sensor_class: motion
        friendly_name: "Bedroom motion sensor"

switch:
  - platform: rest
    resource: http://localhost:8686/outcommand.php?entity=switch.larm_motion_foscam_black
    name: larm_motion_foscam_black
    is_on_template: '{{ value_json.state == "ON" }}'

input_boolean:
  cam_foscam_black_motion:
    name: 'Virtual motion sensor bedroom'
    initial: off
  play_sound_cast_test:
    name: 'Play song on TV'
    initial: off

group:
  cam_foscam_black_group:
    name: Kamera (Svart)
    entities: switch.larm_motion_foscam_black, input_boolean.cam_foscam_black_motion, binary_sensor.cam_foscam_black_motion_sensor

shell_command:
  foscam_black_send_motion_off: 'curl -X POST -H "Content-Type: application/json" -H "x-ha-access: hasspassGislaved" -d "{\"state\":\"OFF\"}" http://localhost:8123/api/states/binary_sensor.cam_foscam_black_motion'

automation:
  - alias: Turn off black foscam motion sensor after delay
    trigger:
      - platform: state
        entity_id: input_boolean.cam_foscam_black_motion
        to: 'on'
    action:
      service: homeassistant.turn_on
      entity_id: script.timed_motion_sensor_foscam_black
      #entity_id: input_boolean.larm_main_switch
  - alias: Play a sound
    trigger:
      - platform: state
        entity_id: input_boolean.play_sound_cast_test
        to: 'on'
    action:
      service: media_player.play_media
      data:
        entity_id: media_player.chromecasttv
        media_content_id: http://rocklosa.se/ola/song.mp3
        media_content_type: audio/mp3

script:
  timed_motion_sensor_foscam_black:
    alias: "1 Set timers for turn of foscam black motion sensor"
    sequence:
      # Cancel ev. old timers
      - service: script.turn_off
        data:
           entity_id: script.turn_off_motion_sensor_foscam_black
      # Set new timer
      - service: script.turn_on
        data:
          entity_id: script.turn_off_motion_sensor_foscam_black

  turn_off_motion_sensor_foscam_black:
    alias: "Turn off motion sensor foscam black after 5 seconds"
    sequence:
      - delay:
          seconds: 5
      #- service: shell_command.foscam_black_send_motion_off
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.cam_foscam_black_motion
