<homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 55.6059
  longitude: 13.0007
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 12
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Stockholm

# Show links to resources in log and frontend
introduction:

# Enables the frontend
frontend:

http:
  # Uncomment this to add a password (recommended!)
  api_password: hasspassGislaved
  # Uncomment this if you are using SSL or running in Docker etc
  # base_url: example.duckdns.org:8123

# Checks for available updates
updater:

# Discover some devices automatically
#discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time.
history:

# View all events in a logbook
logbook:

# Track the sun
sun:

# Weather Prediction
sensor:
  platform: yr

# Text to speech
tts:
  platform: google

device_tracker:
  - platform: ping
    hosts:
      ola_galaxy_s6: 192.168.9.218

camera cam_foscam_black:
  platform: mjpeg
  mjpeg_url: http://192.168.9.208:80/videostream.cgi?user=admin&pwd=summa21
  name: Sovrum

#binary_sensor:
#  - platform: template
#    sensors:
#      cam_foscam_black_motion:
#        value_template: '{{ states.binary_sensor.cam_foscam_black_motion.state }}'
#        friendly_name: 'Ingeborg sovrum'

#binary_sensor cam_foscam_black_motion:
#  - platform: rest
#    resource: 'http://localhost:8686/sensor-loopback.php?sensor=binary_sensor.cam_foscam_black_motion'
#    method: POST
#    payload: '{"sensor":"binary_sensor.cam_foscam_black_motion"}'
#    value_template: '{{ value_json.state }}'
#    name: 'Ingeborg motion'
#    sensor_class: motion

switch larm_motion_foscam_black:
  - platform: rest
    resource: http://localhost:8686/outcommand.php?entity=switch.larm_motion_foscam_black
    name: 'Slå på rörelse sensor'
    is_on_template: '{{ value_json.state == "ON" }}'
  #- platform: command_line
#    command_on:
#    command_off: switch_command off kitchen
#    command_state:

input_boolean:
  cam_foscam_black_motion:
    name: 'Rörelse detekterad'
    initial: off

group:
  cam_foscam_black_group:
    name: Kamera (Svart)
    entities: camera.cam_foscam_black, switch.larm_motion_foscam_black, input_boolean.cam_foscam_black_motion

customize:
  # Only the 'entity_id' is required.  All other options are optional.
  - entity_id: sensor.living_room_motion
    hidden: true

#alarm_control_panel:
#  - platform: manual

shell_command:
  foscam_black_send_motion_off: 'curl -X POST -H "Content-Type: application/json" -H "x-ha-access: hasspassGislaved" -d "{\"state\":\"OFF\"}" http://localhost:8123/api/states/binary_sensor.cam_foscam_black_motion'

automation:
  alias: Turn off black foscam motion sensor after delay
  trigger:
    - platform: state
      entity_id: input_boolean.cam_foscam_black_motion
      to: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: script.timed_motion_sensor_foscam_black
    #entity_id: input_boolean.larm_main_switch

script:
  timed_motion_sensor_foscam_black:
    alias: "1 Set timers for turn of foscam black motion sensor"
    sequence:
      # Cancel ev. old timers
      - service: script.turn_off
        data:
           entity_id: script.turn_off_motion_sensor_foscam_black
      # Set new timer
      - service: script.turn_on
        data:
          entity_id: script.turn_off_motion_sensor_foscam_black

  turn_off_motion_sensor_foscam_black:
    alias: "Turn off motion sensor foscam black after 5 seconds"
    sequence:
      - delay:
          seconds: 5
      #- service: shell_command.foscam_black_send_motion_off
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.cam_foscam_black_motion
